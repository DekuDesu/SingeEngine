#version 330 core
out vec4 color;

in vec3 fragmentPosition;
in vec3 texcoords;

uniform struct _material	{ 
	vec4 color;
	bool useDiffuseMap;
	samplerCube diffuseMap;
} material;

vec3 lightPosition = {0, 3, 0};
float far_plane = 50.0;

void main()
{    
	if(material.useDiffuseMap)
	{ 
        vec3 fragToLight = fragmentPosition - lightPosition;
        // use the light to fragment vector to sample from the depth map    
        float closestDepth = texture(material.diffuseMap, fragToLight).r;
        color = vec4(vec3(closestDepth / far_plane), 1.0);  
	}
	else
	{
		color = material.color;
	}
}