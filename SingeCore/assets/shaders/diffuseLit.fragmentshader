#version 330 core
// Interpolated values from the vertex shaders
in vec2 texcoords;

// Ouput data
out vec4 color;

// the vertex normal
in vec3 normal;
// the model * position of vertex
in vec3 fragmentPosition;

uniform vec3 cameraPosition;

uniform mat4 view;

uniform struct _material	{ 
	vec4 ambient;
	vec4 color;
	vec4 diffuse;
	vec4 specular;
	float shininess;
	bool useDiffuseMap;
	sampler2D diffuseMap;
	bool useSpecularMap;
	sampler2D specularMap;
} material;


vec4 GetLightingColor(_material material);

void main()
{
	color = GetLightingColor(material) * material.color;
}